name: Test script

on:
  push:
    paths-ignore:
      - 'README.md'
      - 'book.json'
      - '.gitignore'
      - '.pep8'
      - 'Dockerfile'
      - 'Dockerfile.*'
      - '.devcontainer/**'
      - '.vscode/**'
      - '.github/**'
      - '!.github/workflows/test.yml'
      - 'docs/**'
    branches:
      - "main"
      - "poetry"
  pull_request:
    paths-ignore:
      - 'README.md'
      - 'book.json'
      - '.gitignore'
      - '.pep8'
      - 'Dockerfile'
      - 'Dockerfile.*'
      - '.devcontainer/**'
      - '.vscode/**'
      - '.github/**'
      - '!.github/workflows/test.yml'
      - 'docs/**'
    branches:
      - "main"

jobs:
  linux:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10"]

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Display Python version
        run: python -c "import sys; print(sys.version)"

      - name: Install poetry and dependencies
        run: |
          curl -sSL https://install.python-poetry.org | POETRY_VERSION=1.2.0 python3 -
          poetry install --without dev

      - name: Run script
        run: poetry run permasigner -u https://github.com/Odyssey-Team/Taurine/releases/download/1.1.6/Taurine-1.1.6.ipa -d

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: TaurineTest-linux-Python${{ matrix.python-version }}.deb
          path: output/**

  macos:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-12]
        python-version: ["3.7", "3.8", "3.9", "3.10"]

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Display Python version
        run: python3 -c "import sys; print(sys.version)"
       
      - name: Export path
        run: echo "/Users/runner/.local/bin:$PATH" >> $GITHUB_PATH

      - name: Install poetry and dependencies
        run: |
          curl -sSL https://install.python-poetry.org | POETRY_VERSION=1.2.0 python3 -
          poetry install --without dev

      - name: Run script
        run: poetry run permasigner -u https://github.com/Odyssey-Team/Taurine/releases/download/1.1.6/Taurine-1.1.6.ipa -d

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: TaurineTest-${{ matrix.os }}-Python${{ matrix.python-version }}.deb
          path: output/**
          
  windows:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [windows-latest]
        python-version: ["3.7", "3.8", "3.9", "3.10"]
        
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Display Python version
        run: python3 -c "import sys; print(sys.version)"

      - name: Install poetry and dependencies
        shell: pwsh
        run: |
          Set-Variable -Name "POETRY_VERSION" -Value "1.2.0"
          (Invoke-WebRequest -Uri https://install.python-poetry.org -UseBasicParsing).Content | python -
          poetry install --without dev

      - name: Run script
        run: poetry run permasigner -u https://github.com/Odyssey-Team/Taurine/releases/download/1.1.6/Taurine-1.1.6.ipa -d

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: TaurineTest-${{ matrix.os }}-Python${{ matrix.python-version }}.deb
          path: \output\**

